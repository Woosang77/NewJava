**변수**

변수 : 하나의 값을 저장할 수 있는 메모리 공간.

<순서> 타입 변수이름;
 ex)    int age; (선언부)
        age = 90; (초기화)
        ==> int age = 90;

<사용범위> 변수는 중괄호 {} 내에서 선언 및 사용 (클래스, 생성자, 메소드)
 * 현 단계에서는 메소드 내 변수만 다룸

 - 로컬 변수 : 메소드 블록 내에서 선언된 변수
 - 변수는 선언된 블록(각 메소드 블록) 내부에서만 사용이 가능하다.
   -> 클래스 내부에 여러 중괄호가 존재할 때, 변수들은 본인이 선언된 메소드 내부에서만 움직일 수 있다.

   ex) public class VariableScopeExample {
            public static void main(String[] args) {
                int v1 = 15;
                if(v1>10) {
                    int v2 = v1 - 10;
                }
                int v3 = v1 + v2 + 5;   // v2 컴파일링 에러
            }
       }

       - v2는 if문 내부에서 선언된 변수이므로 {} 밖에서 호출 및 사용 불가능
       - Error Message = "v2 cannot be resolved to a variable"
<데이터 타입>
 (기본 타입)
  - 정수 : byte / char / short / int(가장 자주 사용) / long
  - 실수 : float / double
  - 논리 : boolean (true / false)

   * String 타입은 클래스 타입으로, String 변수는 참조 변수이다.
   * 일반적인 변수들은 생성하고 값을 저장하는 개념이지만,
   * 참조변수는 객체를 생성하고, 객체의 번지값을 참조변수가 가진다.

 (타입 변환)
   1) 자동 변환 : 작은 크기의 타입을 큰 크기의 타입으로 변환하는 것을 의미함
   크기별 타입 : byte(1) < short(2) < int(4) < long(8) < float(4) < double(8)
   ex) byte byteValue = 10;
       int intValue = byteValue;
       System.out.println(intValue);
       // 10 출력

   2) 강제 변환(Casting) : 큰 크기의 타입을 작은 크기의 타입으로 욱여 넣을 때 사용
    사용 : 작은 크기 타입 = (작은 크기 타입) 큰 크기 타입;
    ex) int intValue = 103029770;
        byte byteValue = (byte) intValue;
        System.out.println(intValue);
        // 103029970 출력

